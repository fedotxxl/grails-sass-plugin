h1. Введение
Вы хотите использовать SCSS/SASS (далее SASS) в своем Grails проекте? Вам повезло, потому что мы уже сталкнулись с подобной проблемой и решили её, написав данный плагин.
На момент написания документации существовал только один плагин, который позволял компилировать SASS в CSS - [http://grails.org/plugin/compass-sass|Compass Framework - SASS/SCSS support].
Нам он не подходил, потому что:
# Требуется установить jRuby и Compass - довольно сложная операция, если у вас много разработчиков и не один сервер сборки.
# В редких ситуация не удается запустить jRuby и скомпилировать SASS
# Не компилирует при сборке проекта (grails war) - решается добавлением команды grails compile-css

Если последние два пункта не очень значимые, то первый показался нам серьезным недостатком. Поэтому был написан данный плагин.

h2. Возможности
Опишем кратко функциональность плагина:
{note}
Все указанные пункты описаны более подробно далее в документации
{note}
# Умеет компилировать SASS в CSS =)
# Не требует установки jRuby / Compass
# Поддержривает два режима компиляции - Disk (компиляция с сохранением на жесткий диск) / Resources (интеграция с Resources плагином)
# Автоматически перекомпилирует файлы при изменении, если вы используете grails run-app
# Поддерживает модульную компиляцию SASS файлов
# Позволяет использовать Compass фреймворк (в тестовом режиме)

h2. Как это работает
Используя jRuby (который включен в плагин) мы используем оригинальный [gem sass|http://rubygems.org/gems/sass], чтобы скомпилировать ваши файлы.
Поэтому, если файлы удалось скомпилировать, то они скомпилированы правильно.

h2. Disk и Resources modes
Изначально плагин работал только совместно с Resources плагином - SASS файлы непосредственно использовались при определении модулей и каждый раз компилировались в памяти.
Однако у такого решения оказались значительные недостатки - невысокая скорость разработки и возможность ошибки при компиляции файла.
Поэтому мы добавили еще один режим работы плагина - компиляция SASS файлов на жесткий диск и использование в Resources плагине уже скомпилированных файлов.
Старый подход мы назвали Resources Mode, а новый - Disk Mode.
Мы рекомендуем вам использовать в работе Disk Mode и уделить больше внимания разделам "", "".
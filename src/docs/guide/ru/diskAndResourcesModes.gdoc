h1. Общее между Disk Mode (DM) и Resources Mode (RM)

h2. Параметры компиляции SASS файлов
При компиляции SASS файлов вы можете передавать параметры компилятору, чтобы получить тот вид CSS файла, который вам необходим (например, сжатый).
{table}
 *Ключ* | *Значение по-умолчанию* | *Возможные значения* | *Описание*
 syntax | "byFileDimension" | "byFileDimension", "sass", "scss" | Определяет синтакс компилируемых файлов - SASS или SCSS: byFileDimension - по разрешению файла; sass - явно SASS; scss - явно SCSS
 style  | "nested" | "nested", "expanded", "compressed", "compact" | Определяет стиль скомпилированного файла - сжатый, вложенный и т.д. Пожалуйста, ознакомьтесь c [http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#output_style|примерами] из официальной документации
 lineComments | false | true, false | если true, то добавляет комментарий с файлом и стокой из которых получено итоговое CSS свойство
 debugInfo | false | true, false | если true, то добавляет в скомпилированный файл информацию, необходимую для [http://stackoverflow.com/questions/9865302/less-sass-debugging-in-chrome-dev-tools-firebug|отладки SASS в браузере]
{table}

h2. Перекомпиляция SASS файлов
Если ваш проект запущен в режиме run-app, то изменение SASS файла должно приводить к его перекомпиляции. Если существуют SASS файлы, которые импортируют данный файл,
то они так же должны быть перекомпилированы.

h2. Импорт SASS файлов
Ваши SASS файлы могут импортировать в себя другие файлы (@import).

h3. Импорт файлов
h4. Понятие SASS Load Paths
Когда вы используете директиву @import компилятору необходимо знать относительно какой папки искать импортированные файлы. SASS Load Paths - список всех папок,
относительно которых компилятор попытается найти импортированные файлы. По-умолчанию плагин добавляет в SASS Load Paths все папки, в которых содержатся SASS файлы.
Допустим, вы хотите импортировать файл "mixins.scss", который расположен в подпапке "common". Текущая реализация позволяет это сделать двумя способами:
{code}
@import "mixins"
{code}
или
{code}
@import "common/mixins"
{code}
Предпочтительнее использовать второй вариант, т.к. он уменьшает вероятность появления конфликтов при импорте файлов

h4. Конфликты при импорте файлов
Если у вас есть два файла, которые имеют одинаковое название, то у вас возникает конфликт - при импорте такого файла может быть использован любой из них.
В этом случае вы можете поступить двумя способами:
1. Указать более полный путь до файла - например, использовать "common/mixins" вместо "mixins"
2. Исключить из SASS Load Paths одну из папок, в которой расположен конфликтный файл

h5. Исключение папки из SASS Load Paths
При необходимости вы можете исключить папку из SASS Load Paths. Для этого добавьте в Config.groovy:
{code}
plugin.grailsSassMinePlugin.compilePathExclude = ['/folders', '/to', '/exclude', 'r']
{code}
Плагин исключит из SASS Load Paths все папки, которые заканчиваются на значения из свойства compilePathExclude.
В данном примере буду исключены папки '/web-app/scss/folders' (оканчивается на '/folders') и, например, '/web-app/scss/other' (оканчивается на 'r').

h3. Версии фреймворков
Если вам нужна какая-то конкретная версия SASS или Compass, то используйте соответствующую версию плагина:
{table}
 *Версия плагина* | *jRuby* | *gem sass* | *gem compass*
0.1 | 0123 | 123 | 123
{table}